.uppercase {
  text-transform: uppercase; }

.group:after, .width-restrict:after {
  content: "";
  display: table;
  clear: both; }

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.width-restrict {
  width: 100%;
  max-width: 1320px;
  margin: 0 auto; }
  .\--content.width-restrict {
    max-width: 70rem;
    margin: 0 auto; }

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased; }

img {
  max-width: 100%;
  display: block; }

body {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-image: url(/assets/visual/images/src/hero-home.jpg);
  background-size: cover;
  background-position: center center; }

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.45);
  z-index: -1; }

main {
  color: #fff;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  font-family: Roboto;
  padding: 20px;
  text-align: center; }
  main h1 {
    font-size: calc( 48px + ( 110 - 48 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    font-family: cubano;
    margin-bottom: 20px;
    line-height: 1; }
  main p {
    font-size: calc( 24px + ( 32 - 24 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    line-height: 1.2;
    max-width: 70%;
    margin-bottom: 20px; }
  main .logo img {
    width: 250px;
    margin-bottom: 80px; }

form {
  display: -ms-flexbox;
  display: flex;
  padding: 0 20px;
  width: 100%;
  -ms-flex-pack: center;
      justify-content: center; }
  form input[type="email"] {
    width: 300px;
    font-size: 16px;
    color: #434343;
    padding: 20px;
    border: none;
    border-radius: 3px 0 0 3px;
    transition: background .2s; }
    form input[type="email"]:focus {
      outline: none;
      background: #f2f2f2; }
  form button {
    color: #fff;
    background: #53C473;
    font-family: cubano;
    font-size: 18px;
    border: none;
    padding: 5px 15px;
    border-radius: 0 3px 3px 0;
    cursor: pointer;
    transition: background .2s; }
    form button:focus {
      outline: none; }
    form button:hover {
      background: #3aaa5a; }

#subscribe-result {
  margin-top: 20px;
  font-family: roboto;
  font-size: 16px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
