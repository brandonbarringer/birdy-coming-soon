.uppercase {
  text-transform: uppercase; }

.group:after, .width-restrict:after {
  content: "";
  display: table;
  clear: both; }

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.width-restrict {
  width: 100%;
  max-width: 1320px;
  margin: 0 auto; }
  .\--content.width-restrict {
    max-width: 70rem;
    margin: 0 auto; }

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased; }

img {
  max-width: 100%;
  display: block; }

body {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-image: url(/assets/visual/images/src/hero-home.jpg);
  background-size: cover;
  background-position: center center; }
  @media screen and (max-width: 1023px) {
    body {
      overflow: initial; } }

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.45);
  z-index: -1; }

main {
  color: #fff;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  font-family: Roboto;
  padding: 20px;
  text-align: center; }
  main button {
    color: #fff;
    background: #53C473;
    font-family: cubano;
    font-size: 18px;
    border: none;
    padding: 5px 15px;
    border-radius: 0 3px 3px 0;
    cursor: pointer;
    transition: background .2s; }
    main button:focus {
      outline: none; }
    main button:hover {
      background: #3aaa5a; }
    @media screen and (max-width: 1023px) {
      main button {
        border-radius: 3px; } }
  main h1 {
    font-size: calc( 32px + ( 65 - 32 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    font-family: cubano;
    margin: 0 auto;
    margin-bottom: 20px;
    line-height: 1;
    max-width: 60%; }
    @media screen and (max-width: 1023px) {
      main h1 {
        max-width: 90%; } }
  main p {
    font-size: calc( 16px + ( 24 - 16 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    line-height: 1.2;
    max-width: 70%;
    margin: 0 auto;
    margin-bottom: 20px; }
    @media screen and (max-width: 1023px) {
      main p {
        max-width: 95%; } }
  main .logo img {
    width: 250px;
    height: auto;
    text-align: center;
    display: inline-block;
    margin-bottom: 80px; }
    @media screen and (max-width: 1023px) {
      main .logo img {
        margin-bottom: 40px;
        width: 150px; } }

form {
  display: -ms-flexbox;
  display: flex;
  padding: 0 20px;
  width: 100%;
  -ms-flex-pack: center;
      justify-content: center; }
  form button {
    padding: 5px 30px; }
  @media screen and (max-width: 1023px) {
    form {
      display: block; } }
  form input[type="email"] {
    width: 300px;
    font-size: 16px;
    color: #434343;
    padding: 20px;
    border: none;
    border-radius: 3px 0 0 3px;
    transition: background .2s; }
    @media screen and (max-width: 1023px) {
      form input[type="email"] {
        width: 100%;
        margin-bottom: 10px;
        border-radius: 3px; } }
    form input[type="email"]:focus {
      outline: none;
      background: #f2f2f2; }

#subscribe-result {
  font-family: cubano;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-direction: column;
      flex-direction: column;
  text-align: center;
  font-size: calc( 21px + ( 42 - 21 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
  color: #232323;
  font-weight: bold;
  background: white;
  background-size: 300px;
  width: 100vw;
  height: 100vh;
  position: absolute;
  display: none;
  top: 0;
  left: 0;
  padding: 15% 5%; }
  #subscribe-result p {
    margin-top: 20px;
    font-family: roboto; }

.fadeIn {
  animation: fadeIn 700; }

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
