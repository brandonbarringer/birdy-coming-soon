.uppercase {
  text-transform: uppercase; }

.group:after, .width-restrict:after {
  content: "";
  display: table;
  clear: both; }

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.width-restrict {
  width: 100%;
  max-width: 1320px;
  margin: 0 auto; }
  .\--content.width-restrict {
    max-width: 70rem;
    margin: 0 auto; }

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased; }

img {
  max-width: 100%;
  display: block; }

body {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-image: url(/assets/visual/images/src/hero-home.jpg);
  background-size: cover;
  background-position: center center; }

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.45);
  z-index: -1; }

main {
  color: #fff;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  font-family: Roboto;
  padding: 20px;
  text-align: center; }
  main h1 {
    font-size: calc( 48px + ( 110 - 48 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    font-family: cubano;
    margin-bottom: 20px;
    line-height: 1; }
  main p {
    font-size: calc( 24px + ( 32 - 24 ) * ( 100vw - 320px ) / ( 1920 - 320 ));
    line-height: 1.2;
    max-width: 70%;
    margin-bottom: 20px; }
  main .logo img {
    width: 250px;
    margin-bottom: 80px; }

form {
  display: -ms-flexbox;
  display: flex;
  padding: 0 20px;
  width: 100%;
  -ms-flex-pack: center;
      justify-content: center; }
  form input[type="email"] {
    width: 300px;
    font-size: 16px;
    color: #434343;
    padding: 20px;
    border: none;
    border-radius: 3px 0 0 3px;
    transition: background .2s; }
    form input[type="email"]:focus {
      outline: none;
      background: #f2f2f2; }
  form button {
    color: #fff;
    background: #53C473;
    font-family: cubano;
    font-size: 18px;
    border: none;
    padding: 5px 15px;
    border-radius: 0 3px 3px 0;
    cursor: pointer;
    transition: background .2s; }
    form button:focus {
      outline: none; }
    form button:hover {
      background: #3aaa5a; }

#subscribe-result {
  font-family: roboto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  text-align: center;
  opacity: 0;
  font-size: 60px;
  color: #232323;
  font-weight: bold;
  background: white;
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
  display: none; }

.fadeIn {
  animation: fadeIn 700 forwards; }

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMvX2hlbHBlcnMuc2FzcyIsImhlbHBlcnMvX3BsYWNlaG9sZGVycy5zYXNzIiwiaGVscGVycy9fbWl4aW5zLnNhc3MiLCJoZWxwZXJzL192YXJzLnNjc3MiLCJoZWxwZXJzL19mdW5jdGlvbnMuc2FzcyIsImJhc2UvX3Jlc2V0LnNjc3MiLCJiYXNlL19iYXNlLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0E7RUFDRSwwQkFBMEIsRUFBRzs7QUFWL0I7RUNlSSxZQUFZO0VBQ1osZUFBZTtFQUNmLFlBQVksRUFBRzs7QURkbkI7RUNpQkUsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixvQkFBVTtFQUNWLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtFQUNiLFdBQVc7RUFDWCxVQUFVLEVBQUc7O0FEckJmO0VFMkNFLFlBQVk7RUFDWixrQkNqRGlCO0VEa0RqQixlQUFlLEVEakJPO0VBTHhCO0lBSUksaUJHSGE7SUhJYixlQUFlLEVBQUc7O0FJbEN0Qjs7O0dBR0c7QUFDSDs7Ozs7Ozs7Ozs7OztFQWFFLFVBQVU7RUFDVixXQUFXO0VBQ1gsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QseUJBQXlCLEVBQzFCOztBQUNELGlEQUFpRDtBQUNqRDs7RUFFRSxlQUFlLEVBQ2hCOztBQUNEO0VBQ0UsaUJBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsYUFBYSxFQUNkOztBQUNEOztFQUVFLFlBQVk7RUFDWixjQUFjLEVBQ2Y7O0FBQ0Q7RUFDRSwwQkFBMEI7RUFDMUIsa0JBQWtCLEVBQ25COztBQzNDRDtFQUNFLHVCQUF1QjtFQUN2QixvQ0FBb0MsRUFBRzs7QUFFekM7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZSxFQUFHOztBQUVwQjtFQUNDLGFBQWE7RUFDYixjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLCtEQUNvRDtFQURwRCx1QkFFYTtFQUZiLG1DQUd5QixFQUFLOztBQUUvQjtFQUNDLG1CQUFtQjtFQUNuQixPQUFPO0VBQ1AsUUFBUTtFQUNSLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0NBQWdCO0VBQ2hCLFlBQVksRUFBRzs7QUFFaEI7RUFDQyxZQUFZO0VBQ1oscUJBQWM7RUFBZCxjQUFjO0VBQ2QsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBd0I7TUFBeEIsd0JBQXdCO0VBQ3hCLHVCQUFvQjtNQUFwQixvQkFBb0I7RUFDcEIsMkJBQXVCO01BQXZCLHVCQUF1QjtFQUN2QixvQkFBb0I7RUFDcEIsY0FBYztFQUNkLG1CQUFtQixFQWFPO0VBdkIzQjtJSnFERSwyRUFBZTtJSXhDZixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLGVBQWUsRUFBRztFQUNuQjtJSnFDQywwRUFBZTtJSW5DZixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLG9CQUFvQixFQUFHO0VBcEJ6QjtJQXNCRSxhQUFhO0lBQ2Isb0JBQW9CLEVBQUc7O0FBQ3pCO0VBQ0MscUJBQWM7RUFBZCxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixzQkFBd0I7TUFBeEIsd0JBQXdCLEVBeUJpQjtFQXhCdkI7SUFDakIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsY0FBYztJQUNkLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsMkJBQTJCLEVBR0Q7SUFWVDtNQVNoQixjQUFjO01BQ2Qsb0JBQW9CLEVBQUc7RUFDekI7SUFDQyxZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLDJCQUEyQixFQUlXO0lBYnZDO01BV0UsY0FBYyxFQUFHO0lBM0JwQjtNQTZCRyxvQkFBa0IsRUFBaUI7O0FBRXRDO0VBQ0Msb0JBQW9CO0VBQ3BCLHFCQUFjO0VBQWQsY0FBYztFQUNkLHVCQUFvQjtNQUFwQixvQkFBb0I7RUFDcEIsc0JBQXdCO01BQXhCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixPQUFPO0VBQ1AsUUFBUTtFQUNSLGNBQWMsRUFBRzs7QUFFbEI7RUFDQywrQkFBK0IsRUFBRzs7QUFFbkM7RUFDQztJQUNDLFdBQVcsRUFBQTtFQUNaO0lBQ0MsV0FBVyxFQUFBLEVBQUEiLCJmaWxlIjoiYXBwbGljYXRpb24uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyb3VwIHtcbiAgQGV4dGVuZCAlZ3JvdXA7IH1cblxuLnNyLW9ubHksIHtcbiAgQGV4dGVuZCAlc3Itb25seTsgfVxuXG4ud2lkdGgtcmVzdHJpY3Qge1xuICBAZXh0ZW5kICV3aWR0aC1yZXN0cmljdDsgfVxuXG4udXBwZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuIiwiJWJ1dHRvbi1yZXNldCB7XG4gIG91dGxpbmU6IDA7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbiVncm91cCB7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7IH0gfVxuXG4lc3Itb25seSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbiV3aWR0aC1yZXN0cmljdCB7XG4gIEBpbmNsdWRlIGdyaWQtd3JhcCgpO1xuXG4gICYuXFwtLWNvbnRlbnQge1xuICAgIG1heC13aWR0aDogcmVtKDExMjBweCk7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG4laWNvbiB7XG4gIGZvbnQtZmFtaWx5OiAnaWNvbnMnO1xuICBzcGVhazogbm9uZTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXZhcmlhbnQ6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuXG4lY2VudGVyZWQtaWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luOiB7XG4gICAgdG9wOiAtMC41ZW07XG4gICAgbGVmdDogLTAuNWVtOyB9IH1cblxuJXJlbW92ZS10YXAtaGlnaGxpZ2h0IHtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsMCwwLDApOyB9XG4iLCIvLyBHZW5lcmF0ZXMgYSBDU1MgdHJpYW5nbGUgdXNpbmcgYm9yZGVyc1xuLy9cbi8vICRwb2ludHktc2lkZSAgICAgICAgICAgICAtIFRoZSB3b3JkIFwidG9wXCIsIFwiYm90dG9tXCIsIFwibGVmdFwiLCBcInJpZ2h0XCIuIFVzZWQgdG8gaW5kaWNhdGUgdGhlIGRpcmVjdGlvbiB0aGUgYXJyb3cgZmFjZXMuXG4vLyAkYXJyb3ctY29sb3IgICAgICAgICAgICAgLSBUaGUgY29sb3IgaGV4IGF0IHRoZSBib3R0b20uXG4vLyAkdHJhbnNwYXJlbnQtYm9yZGVyLXNpemUgLSBXaWR0aCBvZiB0aGUgdHJhbnNwYXJlbnQgYm9yZGVycyB0aGF0IGVmZmVjdCBob3cgdGhlIHRyaWFuZ2xlIGlzIHJlbmRlcmVkLlxuLy8gJGNvbG9yLWJvcmRlci1zaXplICAgICAgIC0gV2lkdGggb2YgdGhlIGNvbG9yZWQgYm9yZGVyIHRoYXQgZWZmZWN0IGhvdyB0aGUgdHJpYW5nbGUgaXMgcmVuZGVyZWQuXG4vL1xuLy8gQ29tcGF0aWJsZSBpbiBFdmVyeXRoaW5nIHdlIHN1cHBvcnRcbkBtaXhpbiB0cmlhbmdsZSgkcG9pbnR5LXNpZGUsICRhcnJvdy1jb2xvciwgJHRyYW5zcGFyZW50LWJvcmRlci1zaXplLCAkY29sb3ItYm9yZGVyLXNpemUpIHtcbiAgYm9yZGVyOiAkdHJhbnNwYXJlbnQtYm9yZGVyLXNpemUgc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci0jeyRwb2ludHktc2lkZX06IDA7XG4gIGJvcmRlci0je29wcG9zaXRlLWRpcmVjdGlvbigkcG9pbnR5LXNpZGUpfTogJGNvbG9yLWJvcmRlci1zaXplIHNvbGlkICRhcnJvdy1jb2xvcjsgfVxuXG4vLyBHZW5lcmF0ZXMgZWl0aGVyIGEgbWluIHdpZHRoLCBtYXgtd2lkdGgsIHJhbmdlLCBvciByZXRpbmEgbWVkaWEgcXVlcnlcbi8vXG4vLyAkbWVkaWEtcXVlcnkgLSBPbmUgb2YgZm91ciBrZXl3b3JkczogXCJyZXRpbmFcIiwgXCJtaW5cIiwgXCJtYXhcIiwgXCJtaW5tYXhcIi4gRGVwZW5kaW5nIG9uIHRoZSB3b3JkIHlvdSB3aWxsIGdldCB0aGF0IHR5cGUgb2YgbWVkaWEgcXVlcnkgb3V0cHV0LlxuLy8gJHJlcyAgICAgICAtIFRoZSBzaXplIGZvciB0aGUgYnJlYWtwb2ludC4gT2Z0ZXJuIHRoaXMgcmVmZXJlbmNlcyBhIHByZWRlZmluZWQgdmFyaWFibGUuIFlvdSBzaG91bGQgcHJvYmFibHkgbm90IGhhdmUgYWN0dWFsIHZhbHVlcyBpbiB0aGlzIGZpZWxkLlxuLy8gJHJlczIgICAgICAgIC0gU2FtZSBhcyAkcmVzIGFuZCBvbmx5IHVzZWQgZm9yIG1pbm1heCBtZWRpYSBxdWVyaWVzIHRvIGdldCBhIHJhbmdlLiAkcmVzIGlzIHN0YXJ0aW5nIHBvaW50IGFuZCAkcmVzMiBpcyBlbmRpbmcgcG9pbnQgb2YgdGhlIHJhbmdlLlxuLy9cbi8vIENvbXBhdGlibGUgaW4gSUU5KywgRXZlcnl0aGluZyBlbHNlLlxuQG1peGluIG1lZGlhKCRtZWRpYS1xdWVyeSwgJHJlczogMGVtLCAkcmVzMjogMGVtKSB7XG4gIEBpZiAkbWVkaWEtcXVlcnkgPT0gcmV0aW5hIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCBvbmx5IHNjcmVlbiBhbmQgKCBtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCBvbmx5IHNjcmVlbiBhbmQgKCAtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyLzEpLCBvbmx5IHNjcmVlbiBhbmQgKCBtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgb25seSBzY3JlZW4gYW5kICggbWluLXJlc29sdXRpb246IDE5MmRwaSksIG9ubHkgc2NyZWVuIGFuZCAoIG1pbi1yZXNvbHV0aW9uOiAyZHBweCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfVxuXG4gIEBpZiAkbWVkaWEtcXVlcnkgPT0gbWluIHtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAoIG1pbi13aWR0aDogJHJlcyApIHtcbiAgICAgIEBjb250ZW50OyB9IH1cblxuICBAaWYgJG1lZGlhLXF1ZXJ5ID09IG1heCB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKCBtYXgtd2lkdGg6ICRyZXMgKSB7XG4gICAgICBAY29udGVudDsgfSB9IH1cblxuLy8gR2VuZXJhdGVzIHZhbHVlcyBmb3IgZ3JpZCBjb2x1bW5zLiBPbmx5IG91dHB1dHMgd2lkdGggYW5kIHBhZGRpbmcuIFlvdSBtdXN0IGZsb2F0IHRoZW0gbWFudWFsbHkuIFRoaXMgaXMgZG9uZSBmb3IgdGhlIG1vc3QgZmxleGliaWxpdHkgd2hlbiBidWlsZGluZyBvdXQgY29tcG9uZW5ldHMuXG4vL1xuLy8gJGNvbHVtbi1zcGFuICAgICAtIEhvdyBtYW55IGNvbHVtbnMgeW91IHdvdWxkIGxpa2UgdG8gbWFrZS5cbi8vIG1hcC1nZXQoJGdyaWQsIGNvbHVtbnMpIC0gVG90YWwgbnVtYmVyIG9mIGNvbHVtbnMuIERlZmF1bHRzIHRvIG1hcC1nZXQoJGdyaWQsIGNvbHVtbnMpIHNldHVwIGluIGhlbHBlcnMvX3ZhcnMuc2Fzc1xuLy8gJGdyaWQtcGFkZGluZyAgICAgIC0gVGhlIHBhZGRpbmcgb3IgZ3V0dGVyIG9mIHRoZSBncmlkLiBEZWZhdWx0cyB0byBtYXAtZ2V0KCRncmlkLCBndXR0ZXIpIHNldHVwIGluIGhlbHBlcnMvX3ZhcnMuc2Fzc1xuLy9cbi8vIENvbXBhdGlibGUgaW4gRXZlcnl0aGluZyB3ZSBzdXBwb3J0XG5AbWl4aW4gZ3JpZCgkY29sdW1uLXNwYW4sICRncmlkLWNvbHVtbnM6IG1hcC1nZXQoJGdyaWQsIGNvbHVtbnMpLCAkZ3JpZC1wYWRkaW5nOiBtYXAtZ2V0KCRncmlkLCBndXR0ZXIpICkge1xuICB3aWR0aDogKCAkY29sdW1uLXNwYW4gLyAkZ3JpZC1jb2x1bW5zICkgKiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6ICRncmlkLXBhZGRpbmc7XG4gIHBhZGRpbmctcmlnaHQ6ICRncmlkLXBhZGRpbmc7IH1cblxuLy8gVXNlZCB0byB3cmFwIGdyaWQgZWxlbWVudHMgYW5kIGNsZWFyIHRoZW0uXG4vL1xuLy8gQ29tcGF0aWJsZSBpbiBFdmVyeXRoaW5nIHdlIHN1cHBvcnRcbkBtaXhpbiBncmlkLXdyYXAoKSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IG1hcC1nZXQoJGdyaWQsIG1heC13aWR0aCk7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBAZXh0ZW5kIC5ncm91cDsgfVxuXG4vLyBQdXNoIG9yIHB1bGwgYSBncmlkIGVsZW1lbnQgd2hpbGUgbGVhdmluZyBpdCBpbiB0aGUgZmxvdyBvZiB0aGUgZG9jdW1lbnQgYW5kIGVmZmVjdGluZyBvdGhlciBnaXJkIGVsZW1lbnRzLlxuLy9cbi8vICRjb2x1bW4tc3BhbiAgIC0gTnVtYmVyIG9mIGNvbHVtbnMgeW91IHdvdWxkIGxpa2UgdG8gcHVzaCBvdmVyLlxuLy8gJCRncmlkLWNvbHVtbnMgLSBUb3RhbCBudW1iZXIgb2YgY29sdW1ucy4gRGVmYXVsdHMgdG8gbWFwLWdldCgkZ3JpZCwgY29sdW1ucykgc2V0dXAgaW4gaGVscGVycy9fdmFycy5zYXNzXG4vL1xuLy8gQ29tcGF0aWJsZSBpbiBFdmVyeXRoaW5nIHdlIHN1cHBvcnRcbkBtaXhpbiBncmlkLXB1c2goJGNvbHVtbi1zcGFuLCAkZ3JpZC1jb2x1bW5zOiBtYXAtZ2V0KCRncmlkLCBjb2x1bW5zKSkge1xuICBtYXJnaW4tbGVmdDogKCRjb2x1bW4tc3BhbiAvICRncmlkLWNvbHVtbnMpICogMTAwJTsgfVxuXG4vLyBQdWxsIGEgZ3JpZCBlbGVtZW50IHdoaWxlIGxlYXZpbmcgaXQgaW4gdGhlIGZsb3cgb2YgdGhlIGRvY3VtZW50IGFuZCBlZmZlY3Rpbmcgb3RoZXIgZ2lyZCBlbGVtZW50cy5cbi8vXG4vLyAkY29sdW1uLXNwYW4gICAtIE51bWJlciBvZiBjb2x1bW5zIHlvdSB3b3VsZCBsaWtlIHRvIHB1c2ggb3Zlci5cbi8vICQkZ3JpZC1jb2x1bW5zIC0gVG90YWwgbnVtYmVyIG9mIGNvbHVtbnMuIERlZmF1bHRzIHRvIG1hcC1nZXQoJGdyaWQsIGNvbHVtbnMpIHNldHVwIGluIGhlbHBlcnMvX3ZhcnMuc2Fzc1xuLy9cbi8vIENvbXBhdGlibGUgaW4gRXZlcnl0aGluZyB3ZSBzdXBwb3J0XG5AbWl4aW4gZ3JpZC1wdWxsKCRjb2x1bW4tc3BhbiwgJGdyaWQtY29sdW1uczogbWFwLWdldCgkZ3JpZCwgY29sdW1ucykpIHtcbiAgbWFyZ2luLWxlZnQ6ICgoJGNvbHVtbi1zcGFuIC8gJGdyaWQtY29sdW1ucykgKiAxMDAlKSAqIC0xOyB9XG5cblxuXG5cblxuLy8gRmx1aWQgVHlwb2dyYXBoeVxuLy8gQGV4YW1wbGU6IGh0dHBzOi8vd3d3LnNtYXNoaW5nbWFnYXppbmUuY29tLzIwMTYvMDUvZmx1aWQtdHlwb2dyYXBoeS8jY29udHJvbGxpbmctdGhlLXJhdGUtb2Ytc2NhbGVcbkBtaXhpbiBmb250LXNjYWxlKCRtaW4tZm9udC1zaXplLCAkbWF4LWZvbnQtc2l6ZSwgJG1pbi1zY3JlZW4tc2l6ZSwgJG1heC1zY3JlZW4tc2l6ZSkge1xuICBmb250LXNpemU6IGNhbGMoICN7IHVucXVvdGUoICcjeyRtaW4tZm9udC1zaXplfScgKyAncHgnICkgfSArICggI3skbWF4LWZvbnQtc2l6ZX0gLSAjeyRtaW4tZm9udC1zaXplfSApICogKCAxMDB2dyAtICN7IHVucXVvdGUoICcjeyRtaW4tc2NyZWVuLXNpemV9JyArICdweCcgKSB9ICkgLyAoICN7JG1heC1zY3JlZW4tc2l6ZX0gLSAjeyRtaW4tc2NyZWVuLXNpemV9ICkgKTsgfVxuXG5cbiIsIiRncmlkOiAoXG4gIG1heC13aWR0aDogMTMyMHB4LFxuICBjb2x1bW5zOiAxMixcbiAgZ3V0dGVyOiAwLjYyNXJlbVxuKTtcblxuJHR5cG9ncmFwaHk6IChcbiAgYmFzZS1mb250LXNpemU6IDE2cHhcbik7XG5cbiRjYXRlZ29yeS1pY29uczogKFxuKTtcblxuJHRoZW1lLWNvbG9yczogKFxuKTtcblxuJGJyZWFrcG9pbnRzOiAoXG4gIG1vYmlsZS1sYXJnZTogMzByZW0sXG4gIHRhYmxldDogNDByZW0sXG4gIHRhYmxldC1sYXJnZTogNTByZW0sXG4gIGxhcHRvcDogNjByZW0sXG4gIGxhcHRvcC1sYXJnZTogNjVyZW0sXG4gIGRlc2t0b3A6IDcwcmVtLFxuICBkZXNrdG9wLWxhcmdlOiA3NXJlbVxuKTtcblxuJHRyYW5zaXRpb246IChcbiAgZHVyYXRpb246IDAuM3MsXG4gIGVhc2VJbkN1YmljOiBjdWJpYy1iZXppZXIoMC41NTAsIDAuMDU1LCAwLjY3NSwgMC4xOTApLFxuICBlYXNlT3V0Q3ViaWM6IGN1YmljLWJlemllcigwLjIxNSwgMC42MTAsIDAuMzU1LCAxLjAwMCksXG4gIGVhc2VJbk91dEN1YmljOiBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApLFxuICBlYXNlSW5DaXJjOiBjdWJpYy1iZXppZXIoMC42MDAsIDAuMDQwLCAwLjk4MCwgMC4zMzUpLFxuICBlYXNlT3V0Q2lyYzogY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyMCwgMC4xNjUsIDEuMDAwKSxcbiAgZWFzZUluT3V0Q2lyYzogY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNTAsIDAuODYwKSxcbiAgZWFzZUluRXhwbzogY3ViaWMtYmV6aWVyKDAuOTUwLCAwLjA1MCwgMC43OTUsIDAuMDM1KSxcbiAgZWFzZU91dEV4cG86IGN1YmljLWJlemllcigwLjE5MCwgMS4wMDAsIDAuMjIwLCAxLjAwMCksXG4gIGVhc2VJbk91dEV4cG86IGN1YmljLWJlemllcigxLjAwMCwgMC4wMDAsIDAuMDAwLCAxLjAwMCksXG4gIGVhc2VJblF1YWQ6IGN1YmljLWJlemllcigwLjU1MCwgMC4wODUsIDAuNjgwLCAwLjUzMCksXG4gIGVhc2VPdXRRdWFkOiBjdWJpYy1iZXppZXIoMC4yNTAsIDAuNDYwLCAwLjQ1MCwgMC45NDApLFxuICBlYXNlSW5PdXRRdWFkOiBjdWJpYy1iZXppZXIoMC40NTUsIDAuMDMwLCAwLjUxNSwgMC45NTUpLFxuICBlYXNlSW5RdWFydDogY3ViaWMtYmV6aWVyKDAuODk1LCAwLjAzMCwgMC42ODUsIDAuMjIwKSxcbiAgZWFzZU91dFF1YXJ0OiBjdWJpYy1iZXppZXIoMC4xNjUsIDAuODQwLCAwLjQ0MCwgMS4wMDApLFxuICBlYXNlSW5PdXRRdWFydDogY3ViaWMtYmV6aWVyKDAuNzcwLCAwLjAwMCwgMC4xNzUsIDEuMDAwKSxcbiAgZWFzZUluUXVpbnQ6IGN1YmljLWJlemllcigwLjc1NSwgMC4wNTAsIDAuODU1LCAwLjA2MCksXG4gIGVhc2VPdXRRdWludDogY3ViaWMtYmV6aWVyKDAuMjMwLCAxLjAwMCwgMC4zMjAsIDEuMDAwKSxcbiAgZWFzZUluT3V0UXVpbnQ6IGN1YmljLWJlemllcigwLjg2MCwgMC4wMDAsIDAuMDcwLCAxLjAwMCksXG4gIGVhc2VJblNpbmU6IGN1YmljLWJlemllcigwLjQ3MCwgMC4wMDAsIDAuNzQ1LCAwLjcxNSksXG4gIGVhc2VPdXRTaW5lOiBjdWJpYy1iZXppZXIoMC4zOTAsIDAuNTc1LCAwLjU2NSwgMS4wMDApLFxuICBlYXNlSW5PdXRTaW5lOiBjdWJpYy1iZXppZXIoMC40NDUsIDAuMDUwLCAwLjU1MCwgMC45NTApLFxuICBlYXNlSW5CYWNrOiBjdWJpYy1iZXppZXIoMC42MDAsIC0wLjI4MCwgMC43MzUsIDAuMDQ1KSxcbiAgZWFzZU91dEJhY2s6IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIwLCAxLjI3NSksXG4gIGVhc2VJbk91dEJhY2s6IGN1YmljLWJlemllcigwLjY4MCwgLTAuNTUwLCAwLjI2NSwgMS41NTApXG4pOyIsIi8vIFJlbW92ZXMgYW55IHVuaXQocHgsIGVtLCByZW0pIGZyb20gYSBudW1iZXIuIFNvbWV0aW1lcyB1c2VmdWwgd2hlbiB0cnlpbmcgdG8gdXNlIGEgdmFyaWFibGUgaW5zaWRlIGFub3RoZXIgbWl4aW4uXG4vL1xuLy8gJG51bWJlciAtIFRoZSBudW1iZXIgd2l0aCB1bml0IHlvdSB3b3VsZCBsaWtlIHN0cmlwZWQuXG5AZnVuY3Rpb24gc3RyaXAtdW5pdHMoJG51bWJlcikge1xuICBAcmV0dXJuICRudW1iZXIgLyAoJG51bWJlciAqIDAgKyAxKTsgfVxuXG4vLyBDb252ZXJ0cyBhIHB4IGJhc2VkIHVuaXQgdG8gZW0gdmFsdWUuXG4vL1xuLy8gJHRhcmdldCAgLSBUaGUgdmFsdWUgaW4gcHggeW91IHdvdWxkIGxpa2UgY29udmVydGVkXG4vLyAkY29udGV4dCAtIFRoZSBmb250IHNpemUgb2YgdGhlIGN1cnJlbnQgY29udGV4dC4gVGhpcyBpcyByZXF1aXJlZCBkdWUgdG8gZW0gY2FzY2FkaW5nIGVmZmVjdC5cbkBmdW5jdGlvbiBlbSgkdGFyZ2V0LCAkY29udGV4dDogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpZiAkdGFyZ2V0ID09IDAge1xuICAgIEByZXR1cm4gMDsgfVxuICBAcmV0dXJuICR0YXJnZXQgLyAkY29udGV4dCArIDBlbTsgfVxuXG4vLyBDb252ZXJ0cyBhIGVtIGJhc2VkIHVuaXQgdG8gcHggdmFsdWUuXG4vL1xuLy8gJHRhcmdldCAgLSBUaGUgdmFsdWUgaW4gZW1zIHlvdSB3b3VsZCBsaWtlIGNvbnZlcnRlZFxuLy8gJGNvbnRleHQgLSBUaGUgZm9udCBzaXplIG9mIHRoZSBjdXJyZW50IGNvbnRleHQuIFRoaXMgaXMgcmVxdWlyZWQgZHVlIHRvIGVtIGNhc2NhZGluZyBlZmZlY3QuXG5AZnVuY3Rpb24gcHgoJHRhcmdldCwgJGNvbnRleHQ6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaWYgJHRhcmdldCA9PSAwIHtcbiAgICBAcmV0dXJuIDA7IH1cbiAgQHJldHVybiBzdHJpcC11bml0cygkdGFyZ2V0KSAqICRjb250ZXh0OyB9XG5cbi8vIENvbnZlcnRzIGEgcHggYmFzZWQgdW5pdCB0byByZW0gdmFsdWUuXG4vL1xuLy8gJHRhcmdldCAgLSBUaGUgdmFsdWUgaW4gcHggeW91IHdvdWxkIGxpa2UgY29udmVydGVkXG5AZnVuY3Rpb24gcmVtKCR0YXJnZXQpIHtcbiAgQGlmICR0YXJnZXQgPT0gMCB7XG4gICAgQHJldHVybiAwOyB9XG4gIEByZXR1cm4gJHRhcmdldCAvIDE2cHggKyAwcmVtOyB9XG5cbi8vIEdldCB0aGUgJSB3aWR0aCBmb3IgZ3JpZCBjb2x1bW5zLlxuLy9cbi8vICRjb2x1bW4tY291bnQgLSBOdW1iZXIgb2YgY29sdW1ucyB5b3Ugd291bGQgbGlrZSB0aGUgd2lkdGggZm9yLlxuLy8gJGNvbnRleHQgICAgICAtIFRoZSBjdXJyZW50IHRvdGFsIG51bWJlciBvZiBjb2x1bW5zIHRoZSBncmlkIGNvbnRhaW5zLiBEZWZhdWx0cyB0byAkZ3JpZC1jb2x1bW4tY291bnQgZm91bmQgaW4gaGVscGVycy9fdmFycy5zYXNzXG5AZnVuY3Rpb24gY29sdW1uLXdpZHRoKCRjb2x1bW4tY291bnQsICRncmlkLWNvbHVtbnM6IG1hcC1nZXQoJGdyaWQsIGNvbHVtbnMpKSB7XG4gIEByZXR1cm4gKCRjb2x1bW4tY291bnQgLyAkZ3JpZC1jb2x1bW5zKSAqIDEwMCU7IH1cblxuXG5AZnVuY3Rpb24gb3Bwb3NpdGUtZGlyZWN0aW9uKCRkaXJlY3Rpb24pIHtcbiAgJG9wcG9zaXRlLWRpcmVjdGlvbjogY2VudGVyO1xuXG4gIEBpZiAkZGlyZWN0aW9uID09IHRvcCB7XG4gICAgJG9wcG9zaXRlLWRpcmVjdGlvbjogYm90dG9tOyB9XG5cbiAgQGlmICRkaXJlY3Rpb24gPT0gYm90dG9tIHtcbiAgICAkb3Bwb3NpdGUtZGlyZWN0aW9uOiB0b3A7IH1cblxuICBAaWYgJGRpcmVjdGlvbiA9PSBsZWZ0IHtcbiAgICAkb3Bwb3NpdGUtZGlyZWN0aW9uOiByaWdodDsgfVxuXG4gIEBpZiAkZGlyZWN0aW9uID09IHJpZ2h0IHtcbiAgICAkb3Bwb3NpdGUtZGlyZWN0aW9uOiBsZWZ0OyB9XG5cbiAgQHJldHVybiAkb3Bwb3NpdGUtZGlyZWN0aW9uOyB9XG4iLCIvKipcbiAqIEVyaWMgTWV5ZXIncyBSZXNldCBDU1MgdjIuMCAoaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8pXG4gKiBodHRwOi8vY3NzcmVzZXQuY29tXG4gKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTtcbn1cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59IiwiKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHkge1xuXHR3aWR0aDogMTAwdnc7XG5cdGhlaWdodDogMTAwdmg7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdGJhY2tncm91bmQ6IHtcblx0XHRpbWFnZTogdXJsKC9hc3NldHMvdmlzdWFsL2ltYWdlcy9zcmMvaGVyby1ob21lLmpwZyk7XG5cdFx0c2l6ZTogY292ZXI7XG5cdFx0cG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH0gfVxuXG4ub3ZlcmxheSB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAwO1xuXHRsZWZ0OiAwO1xuXHRyaWdodDogMDtcblx0Ym90dG9tOiAwO1xuXHRiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC40NSk7XG5cdHotaW5kZXg6IC0xOyB9XG5cbm1haW4ge1xuXHRjb2xvcjogI2ZmZjtcblx0ZGlzcGxheTogZmxleDtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdGZvbnQtZmFtaWx5OiBSb2JvdG87XG5cdHBhZGRpbmc6IDIwcHg7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0aDEge1xuXHRcdEBpbmNsdWRlIGZvbnQtc2NhbGUoNDgsIDExMCwgMzIwLCAxOTIwKTtcblx0XHRmb250LWZhbWlseTogY3ViYW5vO1xuXHRcdG1hcmdpbi1ib3R0b206IDIwcHg7XG5cdFx0bGluZS1oZWlnaHQ6IDE7IH1cblx0cCB7XG5cdFx0QGluY2x1ZGUgZm9udC1zY2FsZSgyNCwgMzIsIDMyMCwgMTkyMCk7XG5cdFx0bGluZS1oZWlnaHQ6IDEuMjtcblx0XHRtYXgtd2lkdGg6IDcwJTtcblx0XHRtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cdC5sb2dvIGltZyB7XG5cdFx0d2lkdGg6IDI1MHB4O1xuXHRcdG1hcmdpbi1ib3R0b206IDgwcHg7IH0gfVxuZm9ybSB7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmc6IDAgMjBweDtcblx0d2lkdGg6IDEwMCU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xuXHRcdHdpZHRoOiAzMDBweDtcblx0XHRmb250LXNpemU6IDE2cHg7XG5cdFx0Y29sb3I6ICM0MzQzNDM7XG5cdFx0cGFkZGluZzogMjBweDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4IDAgMCAzcHg7XG5cdFx0dHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnM7XG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRvdXRsaW5lOiBub25lO1xuXHRcdFx0YmFja2dyb3VuZDogI2YyZjJmMjsgfSB9XG5cdGJ1dHRvbiB7XG5cdFx0Y29sb3I6ICNmZmY7XG5cdFx0YmFja2dyb3VuZDogIzUzQzQ3Mztcblx0XHRmb250LWZhbWlseTogY3ViYW5vO1xuXHRcdGZvbnQtc2l6ZTogMThweDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0cGFkZGluZzogNXB4IDE1cHg7XG5cdFx0Ym9yZGVyLXJhZGl1czogMCAzcHggM3B4IDA7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzO1xuXHRcdCY6Zm9jdXMge1xuXHRcdFx0b3V0bGluZTogbm9uZTsgfVxuXHRcdCY6aG92ZXIge1xuXHRcdFx0YmFja2dyb3VuZDogZGFya2VuKCM1M0M0NzMsIDEwJSk7IH0gfSB9XG5cbiNzdWJzY3JpYmUtcmVzdWx0IHtcblx0Zm9udC1mYW1pbHk6IHJvYm90bztcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0b3BhY2l0eTogMDtcblx0Zm9udC1zaXplOiA2MHB4O1xuXHRjb2xvcjogIzIzMjMyMztcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdGJhY2tncm91bmQ6IHdoaXRlO1xuXHR3aWR0aDogMTAwdnc7XG5cdGhlaWdodDogMTAwdmg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAwO1xuXHRsZWZ0OiAwO1xuXHRkaXNwbGF5OiBub25lOyB9XG5cbi5mYWRlSW4ge1xuXHRhbmltYXRpb246IGZhZGVJbiA3MDAgZm9yd2FyZHM7IH1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuXHQwJSB7XG5cdFx0b3BhY2l0eTogMDsgfVxuXHQxMDAlIHtcblx0XHRvcGFjaXR5OiAxOyB9IH1cbiJdfQ== */
